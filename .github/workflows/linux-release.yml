name: Release for Linux

on:
  push:
    tags:
      - "v*"

jobs:
  build-x64:
    # default x64 github-hosted runner
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make sure the version string matches the tag
        run: |
          CYD_VERSION=$(cat package.json | grep '"version"' | cut -d'"' -f4)
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          TAG_VERSION=${TAG_VERSION#v} # strip the leading 'v' from the tag
          if [ "$CYD_VERSION" != "$TAG_VERSION" ]; then
            echo "::error file=package.json,title=Version check failed::Version string in package.json $CYD_VERSION does not match the tag $TAG_VERSION"
            exit 1
          fi

      - name: Install Linux dependencies
        run: sudo apt-get install -y build-essential fakeroot curl rpm zip sudo

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-x64
          restore-keys: |
            ${{ runner.os }}-node-x64

      - name: Install dependencies
        run: npm ci

      - name: Save Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-x64

      - name: Make release
        run: |
          export DEBUG=electron-packager,electron-universal,electron-forge*
          CYD_VERSION=$(cat package.json | grep '"version"' | cut -d'"' -f4)
          if [[ "$CYD_VERSION" == *-dev ]]; then
            export CYD_ENV=dev
          else
            export CYD_ENV=prod
          fi
          npx electron-forge make --arch x64

      - name: Display output files
        run: find out

      - name: Upload DEB artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deb-packages-x64
          path: out/make/deb/x64/cyd_*.deb

      - name: Upload RPM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rpm-packages-x64
          path: out/make/rpm/x64/cyd-*.rpm

      - name: Upload ZIP artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zip-packages-x64
          path: out/make/zip/linux/x64/Cyd-*.zip

  build-arm64:
    # custom arm64 github-hosted runner
    runs-on: ubuntu-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make sure the version string matches the tag
        run: |
          CYD_VERSION=$(cat package.json | grep '"version"' | cut -d'"' -f4)
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          TAG_VERSION=${TAG_VERSION#v} # strip the leading 'v' from the tag
          if [ "$CYD_VERSION" != "$TAG_VERSION" ]; then
            echo "::error file=package.json,title=Version check failed::Version string in package.json $CYD_VERSION does not match the tag $TAG_VERSION"
            exit 1
          fi

      - name: Install Linux dependencies
        run: sudo apt-get install -y build-essential fakeroot curl rpm zip sudo

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-arm64
          restore-keys: |
            ${{ runner.os }}-node-arm64

      - name: Install dependencies
        run: npm ci

      - name: Save Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-arm64

      - name: Make release
        run: |
          export DEBUG=electron-packager,electron-universal,electron-forge*
          CYD_VERSION=$(cat package.json | grep '"version"' | cut -d'"' -f4)
          if [[ "$CYD_VERSION" == *-dev ]]; then
            export CYD_ENV=dev
          else
            export CYD_ENV=prod
          fi
          npx electron-forge make --arch arm64

      - name: Display output files
        run: find out

      - name: Upload DEB artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deb-packages-arm64
          path: out/make/deb/arm64/cyd_*.deb

      - name: Upload RPM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rpm-packages-arm64
          path: out/make/rpm/arm64/cyd-*.rpm

      - name: Upload ZIP artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zip-packages-arm64
          path: out/make/zip/linux/arm64/Cyd-*.zip
