export const stubElectron = () => {
    return {
        checkForUpdates: cy.stub(),
        getVersion: cy.stub().resolves('0.0.1'),
        getMode: cy.stub().resolves('prod'),
        getPlatform: cy.stub().resolves('win32'),
        getAPIURL: cy.stub().resolves('https://api.example.com'),
        getDashURL: cy.stub().resolves('https://dash.example.com'),
        isFeatureEnabled: cy.stub().resolves(false),
        trackEvent: cy.stub().resolves('tracked'),
        shouldOpenDevtools: cy.stub().resolves(false),
        showMessage: cy.stub(),
        showError: cy.stub(),
        showQuestion: cy.stub(),
        showOpenDialog: cy.stub(),
        openURL: cy.stub(),
        loadFileInWebview: cy.stub(),
        getAccountDataPath: cy.stub().resolves(null),
        startPowerSaveBlocker: cy.stub().resolves(1),
        stopPowerSaveBlocker: cy.stub(),
        deleteSettingsAndRestart: cy.stub(),
        onPowerMonitorSuspend: cy.stub(),
        onPowerMonitorResume: cy.stub(),
        getImageDataURIFromFile: cy.stub().resolves(''),
        database: {
            getConfig: cy.stub().resolves(null),
            setConfig: cy.stub(),
            getErrorReport: cy.stub().resolves(null),
            getNewErrorReports: cy.stub().resolves([]),
            createErrorReport: cy.stub().resolves(),
            updateErrorReportSubmitted: cy.stub(),
            dismissNewErrorReports: cy.stub(),
            getAccount: cy.stub().resolves(null),
            getAccounts: cy.stub().resolves([]),
            createAccount: cy.stub().resolves({ id: 1, type: 'X', sortOrder: 0, xAccount: null, blueskyAccount: null, uuid: 'uuid' }),
            selectAccountType: cy.stub().resolves({ id: 1, type: 'X', sortOrder: 0, xAccount: null, blueskyAccount: null, uuid: 'uuid' }),
            saveAccount: cy.stub(),
            deleteAccount: cy.stub(),
        },
        archive: {
            isPageAlreadySaved: cy.stub().resolves(false),
            savePage: cy.stub().resolves(false),
            openFolder: cy.stub(),
            getInfo: cy.stub().resolves({}),
        },
        X: {
            resetProgress: cy.stub().resolves({}),
            createJobs: cy.stub().resolves([]),
            getLastFinishedJob: cy.stub().resolves(null),
            updateJob: cy.stub(),
            indexStart: cy.stub(),
            indexStop: cy.stub(),
            indexParseTweets: cy.stub().resolves({}),
            indexParseConversations: cy.stub().resolves({}),
            indexIsThereMore: cy.stub().resolves(false),
            resetThereIsMore: cy.stub().resolves(),
            indexMessagesStart: cy.stub().resolves({}),
            indexParseMessages: cy.stub().resolves({}),
            indexConversationFinished: cy.stub().resolves(),
            archiveTweetsStart: cy.stub().resolves({}),
            archiveTweetsOutputPath: cy.stub().resolves(''),
            archiveTweet: cy.stub().resolves(),
            archiveTweetCheckDate: cy.stub().resolves(),
            archiveBuild: cy.stub().resolves(),
            syncProgress: cy.stub(),
            resetRateLimitInfo: cy.stub().resolves(),
            isRateLimited: cy.stub().resolves({}),
            getProgress: cy.stub().resolves({}),
            getProgressInfo: cy.stub().resolves({}),
            getDatabaseStats: cy.stub().resolves({}),
            getDeleteReviewStats: cy.stub().resolves({}),
            saveProfileImage: cy.stub().resolves(),
            getLatestResponseData: cy.stub().resolves(null),
            deleteTweetsStart: cy.stub().resolves({}),
            deleteTweetsCountNotArchived: cy.stub().resolves(0),
            deleteRetweetsStart: cy.stub().resolves({}),
            deleteLikesStart: cy.stub().resolves({}),
            deleteBookmarksStart: cy.stub().resolves({}),
            deleteTweet: cy.stub().resolves(),
            deleteDMsMarkAllDeleted: cy.stub().resolves(),
            deleteDMsScrollToBottom: cy.stub().resolves(),
            unzipXArchive: cy.stub().resolves(null),
            deleteUnzippedXArchive: cy.stub().resolves(null),
            verifyXArchive: cy.stub().resolves(null),
            importXArchive: cy.stub().resolves({}),
            getCookie: cy.stub().resolves(null),
            getConfig: cy.stub().resolves(null),
            setConfig: cy.stub(),
            deleteConfig: cy.stub(),
            deleteConfigLike: cy.stub(),
            getImageDataURI: cy.stub().resolves(''),
            blueskyGetProfile: cy.stub().resolves({}),
            blueskyAuthorize: cy.stub().resolves({}),
            blueskyCallback: cy.stub().resolves({}),
            blueskyDisconnect: cy.stub().resolves({}),
            blueskyGetTweetCounts: cy.stub().resolves({}),
            blueskyMigrateTweet: cy.stub().resolves({}),
            blueskyDeleteMigratedTweet: cy.stub().resolves({}),
            getMediaPath: cy.stub().resolves(''),
        },
        Facebook: {
            resetProgress: cy.stub(),
            createJobs: cy.stub(),
            updateJob: cy.stub(),
            archiveBuild: cy.stub(),
            syncProgress: cy.stub(),
            getProgress: cy.stub(),
            getCookie: cy.stub(),
            getProfileImageDataURI: cy.stub(),
            getConfig: cy.stub(),
            setConfig: cy.stub(),
        },
    };
};